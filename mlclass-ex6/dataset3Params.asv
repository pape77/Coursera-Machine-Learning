function [C, sigma] = dataset3Params(X, y, Xval, yval)
%EX6PARAMS returns your choice of C and sigma for Part 3 of the exercise
%where you select the optimal (C, sigma) learning parameters to use for SVM
%with RBF kernel
%   [C, sigma] = EX6PARAMS(X, y, Xval, yval) returns your choice of C and 
%   sigma. You should complete this function to return the optimal C and 
%   sigma based on a cross-validation set.
%

% You need to return the following variables correctly.
% C = 1;
% sigma = 0.3;
C=0.01;
sigma = 0.01;

% ====================== YOUR CODE HERE ======================
% Instructions: Fill in this function to return the optimal C and sigma
%               learning parameters found using the cross validation set.
%               You can use svmPredict to predict the labels on the cross
%               validation set. For example, 
%                   predictions = svmPredict(model, Xval);
%               will return the predictions on the cross validation set.
%
%  Note: You can compute the prediction error using 
%        mean(double(predictions ~= yval))
%
values = [0.01; 0.03; 0.1; 0.3; 1; 3; 10; 30];
error = 500;
for i=1:numel(values)
    for j=1:numel(values)
        CAux = values(i);
        sigmaAux = values(j);
        model= svmTrain(X, y, CAux, @(x1, x2) gaussianKernel(x1, x2, sigmaA));
        predictions = svmPredict(model, Xval);
        errorAux = mean(double(predictions ~= yval));
        if(error > errorAux)
            C = CAux;
            sigma = sigmaAux;
            error = errorAux
            sigma = sigma
            C = C
        end
    end
end

 arr = [0.01, 0.03, 0.1, 0.3, 1, 3, 10, 30];
res = [];
for i=1:numel(arr)
   for j=1:numel(arr)
       C = arr(i);
       sigma = arr(j);
       model= svmTrain(X, y, C, @(x1, x2) gaussianKernel(x1, x2, sigma));
       predictions = svmPredict(model, Xval);
       res = [res; mean(double(predictions ~= yval)),C,sigma];
   end
end

[m i] = min(res(:,1));
C = res(i,2);
sigma = res(i,3);







% =========================================================================

end
