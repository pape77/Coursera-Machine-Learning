function [J, grad] = costFunction(theta, X, y)
%COSTFUNCTION Compute cost and gradient for logistic regression
%   J = COSTFUNCTION(theta, X, y) computes the cost of using theta as the
%   parameter for logistic regression and the gradient of the cost
%   w.r.t. to the parameters.

% Initialize some useful values
m = length(y); % number of training examples

% You need to return the following variables correctly 
J = 0;
grad = zeros(size(theta));
sumatoria = 0;
for i=1:m
    sumatoria = sumatoria + ( (-y(i) * log(sigmoid(theta' * X(i,:)'))) - ((1- y(i)) * log(1- sigmoid(theta' * X(i,:)'))));
end
J = (1/m) * sumatoria;


grad_temp = zeros(size(theta));

   for j = 1:size(theta)
   sumaTotal = 0;
    for i = 1:m
       elemento = (sigmoid(theta' * X(i,:)')) - y(i);
       elemento = elemento * X(i,j);
       sumaTotal = sumaTotal + elemento;
    end
       grad_temp(j) = theta(j) - (alpha*(1/m)* sumaTotal);
       
       
 theta = theta_temp;
    

% ====================== YOUR CODE HERE ======================
% Instructions: Compute the cost of a particular choice of theta.
%               You should set J to the cost.
%               Compute the partial derivatives and set grad to the partial
%               derivatives of the cost w.r.t. each parameter in theta
%
% Note: grad should have the same dimensions as theta
%








% =============================================================

end
